{"version":3,"file":"static/js/771.2fdfd416.chunk.js","mappings":"4JACA,SAAiB,E,aCWjB,QATA,SAAoBA,GACnB,MAAMC,EAAO,aAAeD,EAAME,GAClC,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAQC,OAAOC,UAC9BJ,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACC,GAAIR,EAAKM,SAAEP,EAAMU,QAG7B,ECTA,GAAiB,ECKjB,QAJA,SAAiBV,GAChB,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAQM,QAAQJ,SAAEP,EAAMW,SAChD,ECHA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA4I,0BCiC5I,MAAMC,EAAiBA,KAEnBT,EAAAA,EAAAA,KAAA,QAAAI,UACEM,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACEJ,EAAAA,EAAAA,KAAA,YAAUW,YAAY,wBACtBX,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,wBAOlB,EAzCA,SAAgBQ,GAAwC,IAAvC,YAAEC,EAAW,YAAEC,EAAW,OAAEC,GAAQH,EACnD,MAAMI,EAAQF,EAMRG,EAAkBD,EAAME,QAAQC,KAAIhB,IACxCH,EAAAA,EAAAA,KAACoB,EAAU,CAAiBb,KAAMJ,EAAOI,KAAMR,GAAII,EAAOJ,IAAzCI,EAAOJ,MAGpBsB,EAAmBL,EAAMM,SAASH,KAAIX,IAC1CR,EAAAA,EAAAA,KAACuB,EAAO,CAACf,QAASA,EAAQA,SAAcA,EAAQT,MAGlD,OAAKgB,GAGHL,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAgBE,SAAA,EAC9BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBE,SAAEa,KACvCP,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAiBE,SAAA,EAC/BJ,EAAAA,EAAAA,KAAA,OAAAI,SAAMiB,KACNrB,EAAAA,EAAAA,KAACS,EAAc,CAACe,SAnBAC,IACpBZ,EAAYY,EAAM,WAWAzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAQ,CAACpB,GAAG,UAWnC,E,+BC5BA,MAgBA,EAhByBqB,IACvB,MAAMC,UAA0BC,EAAAA,UAC9BC,MAAAA,GACE,OAAKC,KAAKlC,MAAMkB,QACTf,EAAAA,EAAAA,KAAC2B,EAAS,IAAKI,KAAKlC,SADIG,EAAAA,EAAAA,KAAC0B,EAAAA,GAAQ,CAACpB,GAAG,UAE9C,EAQF,OAHuC0B,EAAAA,EAAAA,KAHJhB,IAAK,CACtCD,OAAQC,EAAMiB,YAAYlB,UAEWiB,CACrCJ,EAEmC,ECEvC,GAAeM,EAAAA,EAAAA,KACbF,EAAAA,EAAAA,KAdsBhB,IACf,CACLF,YAAaE,EAAMmB,mBAGIC,IAClB,CACLvB,YAAawB,IACXD,GAASvB,EAAAA,EAAAA,GAAYwB,GAAM,MAO/BC,EAFF,CAGEC,E","sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.js","webpack://samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { NavLink } from 'react-router-dom';\nimport classes from './DialogItem.module.css';\n\nfunction DialogItem(props) {\n\tconst path = '/dialogs/1' + props.id;\n\treturn (\n\t\t<div className={classes.dialog}>\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\n\t\t</div>\n\t);\n}\n\nexport default DialogItem;\n","// extracted by mini-css-extract-plugin\nexport default {};","import classes from './Message.module.css';\n\nfunction Message(props) {\n\treturn <div className={classes.message}>{props.message}</div>;\n}\n\nexport default Message;\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"dialog\":\"Dialogs_dialog__htSTl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport classes from \"./Dialogs.module.css\";\n\nfunction Dialogs({ sendMessage, dialogsPage, isAuth }) {\n  const state = dialogsPage;\n\n  const addNewMessage = value => {\n    sendMessage(value);\n  };\n\n  const dialogsElements = state.dialogs.map(dialog => (\n    <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} />\n  ));\n\n  const messagesElements = state.messages.map(message => (\n    <Message message={message.message} key={message.id} />\n  ));\n\n  if (!isAuth) return <Navigate to=\"/login\" />;\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\n      <div className={classes.messages}>\n        <div>{messagesElements}</div>\n        <AddMessageForm onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n}\n\nconst AddMessageForm = () => {\n  return (\n    <form>\n      <div>\n        <textarea placeholder=\"Enter your message\"></textarea>\n        <div>\n          <button>Send message</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n  const mapStateToPropsForRedirect = state => ({\n    isAuth: state.authReducer.isAuth,\n  });\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n  return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthRedirect;\n","import Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { sendMessage } from \"../../redux/dialogs-reducer\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\n\nconst mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsReducer,\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: text => {\n      dispatch(sendMessage(text));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"names":["props","path","id","_jsx","className","classes","dialog","children","NavLink","to","name","message","AddMessageForm","_jsxs","placeholder","_ref","sendMessage","dialogsPage","isAuth","state","dialogsElements","dialogs","map","DialogItem","messagesElements","messages","Message","onSubmit","value","Navigate","Component","RedirectComponent","React","render","this","connect","authReducer","compose","dialogsReducer","dispatch","text","withAuthRedirect","Dialogs"],"sourceRoot":""}