{"version":3,"file":"static/js/795.0de39833.chunk.js","mappings":"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","sources":["webpack://samurai/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","webpack://samurai/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"addPost\":\"MyPosts_addPost__vrj7C\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import classes from './Post.module.css';\n\nfunction Post(props) {\n\treturn (\n\t\t<div className={classes.item}>\n\t\t\t<img\n\t\t\t\talt='user-logo'\n\t\t\t\tsrc='https://play-lh.googleusercontent.com/hJGHtbYSQ0nCnoEsK6AGojonjELeAh_Huxg361mVrPmzdwm8Ots-JzEH5488IS2nojI=w240-h480-rw'\n\t\t\t/>\n\t\t\t{props.message}\n\t\t\t<div>\n\t\t\t\t<span>Likes </span> {props.likesCount}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Post;\n","import React from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\nconst MyPosts = React.memo(({ posts, addPost }) => {\n  const postsElements = posts.map(post => (\n    <Post message={post.message} likesCount={post.likesCount} />\n  ));\n\n  const newPostElement = React.createRef();\n\n  const onAddPost = values => {\n    addPost(values);\n  };\n\n  return (\n    <div className={classes.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostForm onSubmit={onAddPost} />\n      <div className={classes.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nconst AddNewPostForm = () => {\n  return (\n    <form className={classes.addPost}>\n      <div>\n        <textarea />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport { addPost } from \"../../../redux/profile-reducer\";\n\nimport MyPosts from \"./MyPosts\";\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profileReducer.posts,\n    newPostText: state.profileReducer.newPostText,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPost: newPostText => dispatch(addPost(newPostText)),\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = props => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => setEditMode(true);\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n  const onStatusChange = e => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"Create status\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            autoFocus\n            onBlur={deactivateEditMode}\n            onChange={onStatusChange}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"ProfileInfo_avatar__1VFcV\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\"};","import Preloader from \"../../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport classes from \"./ProfileInfo.module.css\";\n\nfunction ProfileInfo({ profile, status, updateStatus }) {\n  if (!profile) {\n    return <Preloader />;\n  }\n  return (\n    <div>\n      <div>\n        <img\n          alt=\"top-background\"\n          src=\"https://png.pngtree.com/thumb_back/fh260/background/20200714/pngtree-modern-double-color-futuristic-neon-background-image_351866.jpg\"\n        />\n      </div>\n      <div className={classes.descriptionBlock}>\n        <img\n          className={classes.avatar}\n          alt=\"user-logo\"\n          src={profile.photos.large}\n        />\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileInfo;\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\n// import classes from \"./Profile.module.css\";\n\nfunction Profile({ profile, status, updateStatus }) {\n  return (\n    <div>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport {\n  getStatus,\n  getUserProfile,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\n\nclass ProfileContainer extends Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n\n  return ComponentWithRouterProp;\n}\nconst mapStateToProps = state => ({\n  profile: state.profileReducer.profile,\n  status: state.profileReducer.status,\n  authorizedUserId: state.authReducer.userId,\n  isAuth: state.authReducer.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter\n)(ProfileContainer);\n"],"names":["props","_jsxs","className","classes","children","_jsx","alt","src","message","likesCount","MyPosts","React","_ref","posts","addPost","postsElements","map","post","Post","postsBlock","AddNewPostForm","onSubmit","values","connect","state","profileReducer","newPostText","dispatch","editMode","setEditMode","useState","status","setStatus","useEffect","onDoubleClick","activateEditMode","autoFocus","onBlur","deactivateEditMode","updateStatus","onChange","e","currentTarget","value","profile","photos","large","ProfileStatusWithHooks","Preloader","ProfileInfo","MyPostsContainer","ProfileContainer","Component","componentDidMount","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","render","Profile","compose","authReducer","isAuth","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}